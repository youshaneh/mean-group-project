{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/food-data.service.ts","webpack:///./src/app/home-list/home-list.component.css","webpack:///./src/app/home-list/home-list.component.html","webpack:///./src/app/home-list/home-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;ACZ0D;AACjB;AACE;AACyB;AAapE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,gFAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBAChB,wDAAU;aACR;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,gFAAiB,CAAC;SAC/B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AChBqB;AAEI;AAG/C;IAIE,yBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,aAAQ,GAAG,iCAAiC,CAAC;IAEpB,CAAC;IAChC,oBAAoB;IACpB,kCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;aACvB,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAY,EAAzB,CAAyB,CAAC;aAC3C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAEO,qCAAW,GAAnB,UAAqB,KAAU;QAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAfQ,eAAe;QAD3B,gEAAU,EAAE;yCAKe,kDAAI;OAJnB,eAAe,CAgB3B;IAAD,sBAAC;CAAA;AAhB2B;;;;;;;;;;;;ACL5B,+DAA+D,mJ;;;;;;;;;;;ACA/D,sDAAsD,WAAW,O;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AAEK;AASvD;IAIE,2BAAoB,WAA4B;QAA5B,gBAAW,GAAX,WAAW,CAAiB;IAAI,CAAC;IAErD,oCAAQ,GAAR;QAAA,iBAQC;QAPE,IAAI,CAAC,WAAW;aACd,QAAQ,EAAE;aACV,IAAI,CAAC,UAAC,KAAa;YAClB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,cAAI;gBACzB,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAdU,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAC,kEAAe,CAAC;SAC7B,CAAC;yCAMiC,kEAAe;OAJrC,iBAAiB,CAe7B;IAAD,wBAAC;CAAA;AAf6B;;;;;;;;;;;;;ACX9B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HomeListComponent } from './home-list/home-list.component';\n\n@NgModule({\n  declarations: [\n    HomeListComponent\n  ],\n  imports: [\n    BrowserModule,\n\tHttpModule\n  ],\n  providers: [],\n  bootstrap: [HomeListComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Food } from './food';\nimport { Http, Response } from '@angular/http';\n\n@Injectable()\nexport class FoodDataService {\n\n  private foodsUrl = 'http://localhost:3000/api/foods';\n  \n  constructor(private http: Http) {}\n    // get(\"/api/foods\")\n    getFoods(): Promise<void | Food[]> {\n      return this.http.get(this.foodsUrl)\n                 .toPromise()\n                 .then(response => response.json() as Food[])\n                 .catch(this.handleError);\n    }\n\n    private handleError (error: any) {\n      console.log(\"error\");\n    }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtbGlzdC9ob21lLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngFor=\\\"let food of foods\\\">{{food.name}}</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Food } from '../food';\nimport { FoodDataService } from '../food-data.service';\n\n@Component({\n  selector: 'app-home-list',\n  templateUrl: './home-list.component.html',\n  styleUrls: ['./home-list.component.css'],\n  providers: [FoodDataService]\n})\n\nexport class HomeListComponent implements OnInit {\n\n  foods: Food[]\n\n  constructor(private foodService: FoodDataService) { }\n\n  ngOnInit() {\n     this.foodService\n      .getFoods()\n      .then((foods: Food[]) => {\n        this.foods = foods.map(food => {\n          return food;\n        });\n      });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}
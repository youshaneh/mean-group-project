{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create/create.component.css","webpack:///./src/app/create/create.component.html","webpack:///./src/app/create/create.component.ts","webpack:///./src/app/details-page/details-page.component.html","webpack:///./src/app/details-page/details-page.component.ts","webpack:///./src/app/framework/framework.component.css","webpack:///./src/app/framework/framework.component.html","webpack:///./src/app/framework/framework.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home-list/home-list.component.css","webpack:///./src/app/home-list/home-list.component.html","webpack:///./src/app/home-list/home-list.component.ts","webpack:///./src/app/homepage/homepage.component.css","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/task-data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Team Members</h1>\\n<div class=\\\"container\\\">\\n  <br>\\n  <p>YOU-SHENG HUANG</p>\\n  <p>ADARSH PUTHUSSERY</p>\\n  <p>NITIN JOHN FINOLD</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeListComponent } from './home-list/home-list.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FrameworkComponent } from './framework/framework.component';\nimport { FormsModule} from '@angular/forms';\n\nimport { APP_BASE_HREF } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CreateComponent } from './create/create.component';\nimport { DetailsPageComponent } from './details-page/details-page.component';\n\n@NgModule({\n  declarations: [\n    HomeListComponent,\n    AboutComponent,\n    HomepageComponent,\n    HeaderComponent,\n    FrameworkComponent,\n    CreateComponent,\n    DetailsPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule, RouterModule.forRoot([\n      {\n        path: '',\n        component: HomepageComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'create',\n        component: CreateComponent\n      },\n      {\n        path: 'task/:taskid',\n        component: DetailsPageComponent\n      }\n    ])\n  ],\n  providers: [{provide: APP_BASE_HREF, useValue: '/'}],\n  bootstrap: [FrameworkComponent]\n})\nexport class AppModule { }\n// ng build --output-path build","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS9jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"\\\">\\n  <h1>Add a new task</h1>\\n</div>\\n<div class=\\\"\\\">\\n  <div class=\\\"col\\\" style=\\\"margin:36px 0 16px 0\\\">\\n    <form (ngSubmit)=\\\"createNewTask(newTask)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Created Date:</label> {{newTask.createdDateString}}\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name: </label>\\n        <input [(ngModel)]=\\\"newTask.name\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"description\\\">Description: </label>\\n        <input [(ngModel)]=\\\"newTask.description\\\" id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\"\\n          required=\\\"required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"dueDate\\\">Due Date: </label>\\n        <input [(ngModel)]=\\\"newTask.dueDateString\\\" type=\\\"date\\\" id=\\\"dueDate\\\" name=\\\"dueDate\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"priority\\\">Priority: </label>\\n        <select [(ngModel)]=\\\"newTask.priority\\\" id=\\\"priority\\\" name=\\\"priority\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n          <option [value]=\\\"0\\\" selected>Low</option>          \\n          <option [value]=\\\"1\\\">Medium</option>          \\n          <option [value]=\\\"2\\\">High</option>\\n        </select>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"done\\\">Done: </label>\\n        <select [(ngModel)]=\\\"newTask.done\\\" id=\\\"done\\\" name=\\\"done\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n          <option [value]=\\\"false\\\" selected>No</option>          \\n          <option [value]=\\\"true\\\">Yes</option>\\n        </select>\\n      </div>\\n      <br>\\n      <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">Create</button>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../task';\nimport { TaskDataService } from '../task-data.service';\nimport { Router} from '@angular/router';\nimport { invalid } from '@angular/compiler/src/render3/view/util';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css'],\n  providers: [TaskDataService]\n})\nexport class CreateComponent implements OnInit {\n  public date: Date = new Date();\n  public dateString = `${this.date.getFullYear()}-${this.date.getMonth()+1}-${this.date.getDate()}`\n\n  public newTask = {\n    name: \"\",\n    description: \"\",\n    createdDateString: this.dateString,\n    dueDateString: this.dateString,\n    priority: 0,\n    done: false\n  }\n\n  constructor(private TaskDataService: TaskDataService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  public createNewTask(newTask):void {\n    newTask.createdDate = new Date(newTask.createdDateString);\n    newTask.dueDate = new Date(newTask.dueDateString);\n    this.TaskDataService.createTask(newTask).then(() => {\n      this.router.navigate(['/']);\n    });\n  }\n}\n","module.exports = \"<div *ngIf=\\\"newTask\\\">\\n  <div *ngIf=\\\"!editing\\\">\\n    <div class=\\\"\\\">\\n      <h1>{{newTask.name}}</h1>\\n    </div>\\n    <div class=\\\"\\\">\\n      <div class=\\\"col\\\" style=\\\"margin-bottom:16px\\\">\\n        {{newTask.description}}\\n      </div>\\n    </div>\\n    <div class=\\\"\\\">\\n      <div class=\\\"col\\\">\\n        <div>Created Date: {{newTask.createdDateString}}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"\\\">\\n      <div class=\\\"col\\\">\\n        <div>Due Date: {{newTask.dueDateString}}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"\\\">\\n      <div class=\\\"col\\\">\\n        <div>Priority:\\n          <span [ngSwitch]=\\\"newTask.priority\\\">\\n            <span *ngSwitchCase=\\\"0\\\">Low</span>\\n            <span *ngSwitchCase=\\\"1\\\">Mediun</span>\\n            <span *ngSwitchCase=\\\"2\\\">High</span>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"\\\">\\n      <div class=\\\"col\\\">\\n        <div>Done:\\n          <span [ngSwitch]=\\\"newTask.done\\\">\\n            <span *ngSwitchCase=\\\"true\\\">Yes</span>\\n            <span *ngSwitchCase=\\\"false\\\">No</span>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n    <div style=\\\"margin-top: 16px; margin-bottom:24px\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"edit(true)\\\">Edit</button>\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(newTask)\\\" style=\\\"margin-left:14px\\\">Delete</button>\\n    </div>\\n  </div>\\n  \\n  <div *ngIf=\\\"editing\\\">\\n    <div class=\\\"\\\">\\n      <h1>{{newTask.name}}</h1>\\n      <div class=\\\"col\\\" style=\\\"margin-bottom:16px\\\">\\n        <form (ngSubmit)=\\\"update(updateTask)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Created Date:</label> {{updateTask.createdDateString}}\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name: </label>\\n            <input [(ngModel)]=\\\"updateTask.name\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description: </label>\\n            <input [(ngModel)]=\\\"updateTask.description\\\" id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\"\\n              required=\\\"required\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"dueDate\\\">Due Date: </label>\\n            <input [(ngModel)]=\\\"updateTask.dueDateString\\\" type=\\\"date\\\" id=\\\"dueDate\\\" name=\\\"dueDate\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"priority\\\">Priority: </label>\\n            <select [(ngModel)]=\\\"updateTask.priority\\\" id=\\\"priority\\\" name=\\\"priority\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n              <option [value]=\\\"0\\\" selected>Low</option>          \\n              <option [value]=\\\"1\\\">Medium</option>          \\n              <option [value]=\\\"2\\\">High</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"done\\\">Done: </label>\\n            <select [(ngModel)]=\\\"updateTask.done\\\" id=\\\"done\\\" name=\\\"done\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n              <option [value]=\\\"false\\\" selected>No</option>          \\n              <option [value]=\\\"true\\\">Yes</option>\\n            </select>\\n          </div>\\n          <br>\\n          <div style=\\\"margin-bottom:14px\\\">\\n            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Save</button>\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"edit(false)\\\" style=\\\"margin-left:14px\\\">Cancel</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TaskDataService } from \"../task-data.service\";\nimport { Task } from \"../task\";\nimport { ActivatedRoute, Params } from \"@angular/router\";\nimport { switchMap } from \"rxjs/operators\";\nimport { Router} from '@angular/router';\n\n@Component({\n  selector: 'app-details-page',\n  templateUrl: './details-page.component.html',\n  styles: [],\n  providers: [TaskDataService]\n})\nexport class DetailsPageComponent implements OnInit {\n  constructor(private TaskDataService: TaskDataService,\n    private route: ActivatedRoute,  private router: Router) { }\n\n  newTask: any;\n  updateTask: any;\n  editing: boolean;\n\n  ngOnInit(): void {\n    this.route.params.pipe(switchMap((params: Params) => this.TaskDataService.getSingleTask(params['taskid'])))\n      .subscribe((newTask: any) => {\n        this.newTask = newTask;\n        this.newTask.createdDateString =  this.getDateString(this.newTask.createdDate);\n        this.newTask.dueDateString =  this.getDateString(this.newTask.dueDate);\n        this.editing = false;\n      })\n  }\n\n  public edit(editing: boolean): void {\n    let { name, description, createdDate, dueDate, priority, done, createdDateString, dueDateString, _id } = this.newTask;\n    this.updateTask = { name, description, createdDate, dueDate, priority, done, createdDateString, dueDateString, _id };\n    this.editing = editing;\n  }\n\n  private getDateString(date){\n    date = new Date(date);\n    date.setDate(date.getDate() +1);\n    return`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\n  }\n\n  public update(updateTask: any): void {\n    updateTask.dueDate = new Date(updateTask.dueDateString);\n    this.TaskDataService.updateTask(updateTask).then(() => {\n      this.ngOnInit();\n    });\n  }\n\n  public delete(updateTask: Task): void {\n    this.TaskDataService.deleteTask(updateTask).then(() => {\n      this.router.navigate(['/']);\n    });\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZyYW1ld29yay9mcmFtZXdvcmsuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"navbar-header\\\"></div>\\n  <ul class=\\\"nav navbar-nav\\\" style=\\\"padding-left:15px\\\">\\n    <li class=\\\"nav-item\\\"><a routerLink=\\\"\\\">Todo</a></li>\\n    <li class=\\\"nav-item\\\"><a routerLink=\\\"create\\\">Create</a></li>\\n    <li class=\\\"nav-item\\\"><a routerLink=\\\"about\\\">About</a></li>\\n  </ul>\\n</nav>\\n<div class=\\\"panel panel-default\\\" style=\\\"padding:0 15px;\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.css']\n})\nexport class FrameworkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>{{content.title}}</h1>\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input()\n  content : any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtbGlzdC9ob21lLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<ul class=\\\"list-group\\\">\\r\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let task of tasks\\\">\\r\\n    <span *ngIf=\\\"task.done\\\" style=\\\"display: inline-block; width: 20px; color: green;\\\">✔</span>\\r\\n    <span *ngIf=\\\"!task.done\\\" style=\\\"display: inline-block; width: 20px; \\\"></span>\\r\\n    <a routerLink=\\\"{{'task/' + task._id}}\\\">\\r\\n      {{task.name}}\\r\\n    </a>\\r\\n  </li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../task';\nimport { TaskDataService } from '../task-data.service';\n\n@Component({\n  selector: 'app-home-list',\n  templateUrl: './home-list.component.html',\n  styleUrls: ['./home-list.component.css'],\n  providers: [TaskDataService]\n})\n\nexport class HomeListComponent implements OnInit {\n\n  tasks: Task[]\n\n  constructor(private foodService: TaskDataService) { }\n\n  ngOnInit() {\n     this.foodService\n      .getTasks()\n      .then((tasks: Task[]) => {\n        this.tasks = tasks.map(task => {\n          return task;\n        });\n      });\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWVwYWdlL2hvbWVwYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Todo list</h1>\\n<app-home-list></app-home-list>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  pageContent = {\n    header: {\n      title: '',\n      body: ''\n    }\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { Task } from './task';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\n@Injectable()\nexport class TaskDataService {\n\n  private tasksUrl = 'http://localhost:3000/api/tasks';\n  \n  constructor(private http: HttpClient) {}\n    getTasks(): Promise<void | Task[]> {\n      return this.http.get(this.tasksUrl)\n                 .toPromise()\n                 .then(response => response as Task[])\n                 .catch(this.handleError);\n    }\n\n    getSingleTask(taskId : String): Promise<void | Task> {\n      return this.http.get(this.tasksUrl + '/' + taskId)\n                 .toPromise()\n                 .then(response => response as Task)\n                 .catch(this.handleError);\n    }\n\n    createTask(newTask : Task): Promise<void | Task> {\n      return this.http.post(this.tasksUrl,newTask)\n                 .toPromise()\n                 .then(response => response as Task)\n                 .catch(this.handleError);\n    }\n    \n    updateTask(newTask : Task): Promise<void | Task> {\n      return this.http.put(this.tasksUrl + '/' + newTask['_id'],newTask)\n                 .toPromise()\n                 .then(response => response as Task)\n                 .catch(this.handleError);\n    }\n    \n    deleteTask(newTask : Task): Promise<void | Task> {\n      return this.http.delete(this.tasksUrl + '/' + newTask['_id'])\n                 .toPromise()\n                 .then(response => response as Task)\n                 .catch(this.handleError);\n    }\n\n\n    private handleError (error: any) {\n      console.log(\"error\");\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}